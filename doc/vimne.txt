vimne.txt   Utility to edit numbers (multiply/divide)

Author: Alexis Pereda
License: GPLv3

CONTENTS                                                               *vimne*

1. Introduction  |vimne-introduction|
2. How it works  |vimne-howitworks|
3. Usage         |vimne-usage|
4. Requirements  |vimne-requirements|
5. Variables     |vimne-variables|
7. License       |vimne-license|

==============================================================================
Introduction                                              *vimne-introduction*

This plugin mainly provides the `:Multiply` and `:Divide` commands.

This completes the default utilities in vim which are adding and sutracting.

==============================================================================
How it works                                                *vimne-howitworks*

The function |VimulApply| finds the first occurrence of a valid number on
the current line. The number is searched in the right side of the cursor
position, but if the cursor already is in the number, it first goes back left.

Then, it erases the number part to replace it by the result of the required
calculation (first argument, in the form of a binary function accepting
the current number and the `v:count`.

It accepts numbers in different bases: 10, 2 if beginning by `0b` or `0B`, 8
if beginning by `0` and 16 if beginning by `0x` or `0X`. If `0X` is used, it
will use uppercase digits instead of lowercase ones.

==============================================================================
Usage                                                            *vimne-usage*

Available commands: >
  :Multiply
  :Divide
  :MultByPowerOf2
  :NextFibonacci
<

Available functions: >
  VimulApply(function, modifier)
<

If you want to create mappings for a command, you must use `<C-u>` like that:
`map <leader>m :<C-u>Multiply`

MULTIPLY COMMAND                                                    *Multiply*

Calls |vimne#apply| with `vimne#multiply` function.
If the multiplier is 0, 2 is used instead.

DIVIDE COMMAND                                                        *Divide*

Calls |vimne#apply| with `vimne#divide` function.
If the divider is 0, 2 is used instead.

MULTBYPOWEROF2 COMMAND                                        *MultByPowerOf2*

Calls |vimne#apply| with `vimne#multbypowerof2` function.
If `v:count` is 0, 1 is used instead.

NEXTFIBONACCI COMMAND                                          *NextFibonacci*

Calls |vimne#apply| with `vimne#nextfibonacci` function.
If `v:count` is 0, 1 is used instead.

VIMULAPPLY FUNCTION                                               *VimulApply*

Replaces the number with the result of `function(currentNumber, modifier)`.

==============================================================================
Requirements                                              *vimne-requirements*

Currently, none.

==============================================================================
Variables                                                    *vimne-variables*

Currently, none.

==============================================================================
License                                                        *vimne-license*

This software is licensed under the GPL v3 license
